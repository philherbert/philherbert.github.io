name: Fetch Strava Data

on:
  workflow_dispatch:

jobs:
  fetch-strava-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        env:
          REFRESH_TOKEN = ${{ secrets.STRAVA_REFRESH_TOKEN }}
          CLIENT_SECRET = ${{ secrets.STRAVA_CLIENT_SECRET }}
          CLIENT_ID     = ${{ vars.STRAVA_CLIENT_ID }}
        with:
          script: |
            const sodium = require('libsodium-wrappers')
            
            const response = await fetch("https://www.strava.com/api/v3/oauth/token", {
              body: `client_id=ReplaceWithClientID&client_secret=${process.env.CLIENT_SECRET}&grant_type=refresh_token&refresh_token=ReplaceWithRefreshToken`,
              headers: {
                "Content-Type": "application/x-www-form-urlencoded"
              },
              method: "POST"
            })
            const json = await response.json()
            
            const new_access_token = json['access_token']
            const new_refresh_token = json['refresh_token']
            
            const { owner, repo } = github.context.repo()
            const { key, key_id } = github.rest.actions.getRepoPublicKey({
              owner,
              repo,
            });
            
            const secret = new_refresh_token

            //Check if libsodium is ready and then proceed.
            sodium.ready.then(() => {
              // Convert Secret & Base64 key to Uint8Array.
              let binkey = sodium.from_base64(key, sodium.base64_variants.ORIGINAL)
              let binsec = sodium.from_string(secret)

              //Encrypt the secret using LibSodium
              let encBytes = sodium.crypto_box_seal(binsec, binkey)

              // Convert encrypted Uint8Array to Base64
              let output = sodium.to_base64(encBytes, sodium.base64_variants.ORIGINAL)

              github.rest.actions.createOrUpdateRepoSecret({
                owner,
                repo,
                secret_name,
                key_id,
                encrypted_value: output
              });
            });
            
